#include <iostream>
#include <string>

int main() {
    // Сначала создадим объект класса string
    // и инициализируем его значением "Hello, world!"
    std::string myString = "Hello, world!";

    // Выведем содержимое строки на экран
    std::cout << "Значение строки: " << myString << std::endl;

    // Получим длину строки с помощью функции size()
    int length = myString.size();
    std::cout << "Длина строки: " << length << std::endl;

    // Добавим к строке символ '!'
    myString += '!';
    std::cout << "Строка с добавленным символом '!': " << myString << std::endl;

    // Вставим подстроку "world" после слова "Hello"
    myString.insert(6, "world");
    std::cout << "Строка с вставленной подстрокой 'world': " << myString << std::endl;

    // Удалим подстроку "Hello"
    myString.erase(0, 5);
    std::cout << "Строка после удаления подстроки 'Hello': " << myString << std::endl;

    // Заменим первое вхождение символа 'o' на символ 'a'
    size_t pos = myString.find('o');
    if (pos != std::string::npos) {
        myString[pos] = 'a';
    }
    std::cout << "Строка после замены символа 'o' на символ 'a': " << myString << std::endl;

    return 0;
}

В данном коде используется язык программирования C++. Он демонстрирует примеры использования функций из библиотеки string.h для работы со строками. 
Комментарии в коде поясняют каждый шаг и действие, которое происходит. Код создает объект класса string, выводит его значение, определяет длину строки, добавляет символ к строке, вставляет подстроку внутрь строки, удаляет подстроку, заменяет символ в строке.
очиститьОчистить чат
Какой код написать или проверить?
Отправить
Какой код написать или проверить?
Отправить
